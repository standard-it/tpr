import{i as n}from"./index-DTEV5yGJ.js";import{k as u,s as i,e as c}from"./index-DEZaLq76.js";const o="/v1/trunk",f=u("trunk",()=>{const a=i(),t=c({name:"",type:"endpoint",transport:"transport-udp",context:"",disallow:"all",allow:"ulaw",outbound_auth:{type:"auth",auth_type:"userpass",password:"",username:""},from_user:"",from_domain:"",direct_media:"no",registration:{type:"registration",transport:"transport-udp",server_uri:"",client_uri:"",retry_interval:60,expiration:120,contact_user:""},identify:{type:"identify",endpoint:"",match:""},aors:{type:"aor",contact:""}}),e=c([]);return{elements:e,element:t,save:async()=>{try{const r=await n.post(o,t.value);e.value===null&&(e.value=[]),e.value.push(r.data),a.push({name:"trunk"})}catch(r){console.error("Error saving trunk:",r)}},update:async()=>{try{await n.put([o,t.value.id].join("/"),t.value),a.push({name:"trunk"})}catch(r){console.error("Error updating trunk:",r)}},remove:async()=>{try{await n.delete([o,t.value.id].join("/")),a.push({name:"trunk"})}catch(r){console.error("Error deleting trunk:",r)}},fetchAll:async()=>{try{const r=await n.get(o);e.value=r.data}catch(r){console.error("Error fetching trunk:",r)}},fetchOne:async r=>{try{const s=await n.get([o,r].join("/"));t.value=s.data}catch(s){console.error("Error fetching trunk:",s)}}}});export{f as u};
